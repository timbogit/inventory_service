{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:10003/api/v1",
  "apis": [
    {
      "path": "/inventory_items.json",
      "operations": [
        {
          "summary": "Fetches all inventory items",
          "responseMessages": [
            {
              "code": 304,
              "message": "The content has not changed in relation to the request ETag / If-Modified-Since"
            }
          ],
          "method": "get",
          "nickname": "InventoryItems#index"
        }
      ]
    },
    {
      "path": "/inventory_items.json",
      "operations": [
        {
          "summary": "Creates a new inventory item",
          "parameters": [
            {
              "paramType": "form",
              "name": "inventory_item",
              "type": "InventoryItem",
              "description": "First name",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 422,
              "message": "Unprocessable Entity"
            }
          ],
          "method": "post",
          "nickname": "InventoryItems#create"
        }
      ]
    },
    {
      "path": "/inventory_items/{id}.json",
      "operations": [
        {
          "summary": "Fetches a single inventory item",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Inventory Item Id",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 304,
              "message": "The content has not changed in relation to the request ETag / If-Modified-Since"
            },
            {
              "code": 404,
              "message": "Not Found"
            }
          ],
          "method": "get",
          "nickname": "InventoryItems#show"
        }
      ]
    },
    {
      "path": "/inventory_items/{id}.json",
      "operations": [
        {
          "summary": "Updates an existing inventory item",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Inventory Item Id",
              "required": true
            },
            {
              "paramType": "form",
              "name": "inventory_item",
              "type": "InventoryItem",
              "description": "First name",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Not Found"
            },
            {
              "code": 422,
              "message": "Unprocessable Entity"
            }
          ],
          "method": "patch",
          "nickname": "InventoryItems#update"
        }
      ]
    },
    {
      "path": "/inventory_items/{id}.json",
      "operations": [
        {
          "summary": "Updates an existing inventory item",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Inventory Item Id",
              "required": true
            },
            {
              "paramType": "form",
              "name": "inventory_item",
              "type": "InventoryItem",
              "description": "First name",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Not Found"
            },
            {
              "code": 422,
              "message": "Unprocessable Entity"
            }
          ],
          "method": "put",
          "nickname": "InventoryItems#update"
        }
      ]
    },
    {
      "path": "/inventory_items/{id}.json",
      "operations": [
        {
          "summary": "Deletes an existing inventory item",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Inventory Item Id",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 404,
              "message": "Not Found"
            },
            {
              "code": 422,
              "message": "Unprocessable Entity"
            }
          ],
          "method": "delete",
          "nickname": "InventoryItems#destroy"
        }
      ]
    },
    {
      "path": "/inventory_items/in_city/{city_id}.json",
      "operations": [
        {
          "summary": "Finds items in a given city",
          "parameters": [
            {
              "paramType": "path",
              "name": "city_id",
              "type": "integer",
              "description": "city ID in which to look for items",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 304,
              "message": "The content has not changed in relation to the request ETag / If-Modified-Since"
            }
          ],
          "method": "get",
          "nickname": "InventoryItems#in_city"
        }
      ]
    },
    {
      "path": "/inventory_items/near_city/{city_id}.json",
      "operations": [
        {
          "summary": "Finds items in a given city",
          "parameters": [
            {
              "paramType": "path",
              "name": "city_id",
              "type": "integer",
              "description": "city ID in which to look for items",
              "required": true
            },{
              "paramType": "query",
              "name": "within",
              "type": "integer",
              "description": "Number of miles around the reference city to look for inventory items; 15 miles is the default",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 304,
              "message": "The content has not changed in relation to the request ETag / If-Modified-Since"
            }
          ],
          "method": "get",
          "nickname": "InventoryItems#near_city"
        }
      ]
    }
  ],
  "resourcePath": "/inventory_items",
  "models": {
    "InventoryItem": {
      "id": "InventoryItem",
      "required": [
        "city_id",
        "price",
        "title"
      ],
      "properties": {
        "city_id": {
          "type": "integer",
          "description": "ID of the city where the inventory item is sold."
        },
        "price": {
          "type": "double",
          "description": "Price of the inventory item."
        },
        "title": {
          "type": "string",
          "description": "Name of the inventory item."
        }
      },
      "description": "An inventory item."
    }
  }
}
